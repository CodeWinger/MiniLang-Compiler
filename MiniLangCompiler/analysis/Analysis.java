/* This file was generated by SableCC (http://www.sablecc.org/). */

package MiniLangCompiler.analysis;

import MiniLangCompiler.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProgram(AProgram node);
    void caseAAssignStatement(AAssignStatement node);
    void caseAIfElseStatement(AIfElseStatement node);
    void caseAIfStatement(AIfStatement node);
    void caseAWhileIdStatement(AWhileIdStatement node);
    void caseAPrintStatement(APrintStatement node);
    void caseAReadStatement(AReadStatement node);
    void caseAIntDecDeclaration(AIntDecDeclaration node);
    void caseAFloatDecDeclaration(AFloatDecDeclaration node);
    void caseAStringDecDeclaration(AStringDecDeclaration node);
    void caseACstPlusCstExp(ACstPlusCstExp node);
    void caseACstMinusCstExp(ACstMinusCstExp node);
    void caseAFactorCstExp(AFactorCstExp node);
    void caseACstMultFactor(ACstMultFactor node);
    void caseACstDivdFactor(ACstDivdFactor node);
    void caseATermFactor(ATermFactor node);
    void caseATermSterm(ATermSterm node);
    void caseAStermSterm(AStermSterm node);
    void caseACstIdTerm(ACstIdTerm node);
    void caseACstIntTerm(ACstIntTerm node);
    void caseACstFloatTerm(ACstFloatTerm node);
    void caseACstStringTerm(ACstStringTerm node);
    void caseAParenTerm(AParenTerm node);

    void caseTEol(TEol node);
    void caseTBlank(TBlank node);
    void caseTEqual(TEqual node);
    void caseTIf(TIf node);
    void caseTThen(TThen node);
    void caseTElse(TElse node);
    void caseTEndif(TEndif node);
    void caseTWhile(TWhile node);
    void caseTDo(TDo node);
    void caseTDone(TDone node);
    void caseTPrint(TPrint node);
    void caseTRead(TRead node);
    void caseTVar(TVar node);
    void caseTInt(TInt node);
    void caseTFloat(TFloat node);
    void caseTString(TString node);
    void caseTSemicolon(TSemicolon node);
    void caseTColon(TColon node);
    void caseTComment(TComment node);
    void caseTStar(TStar node);
    void caseTSlash(TSlash node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTIntNumber(TIntNumber node);
    void caseTFloatNumber(TFloatNumber node);
    void caseTId(TId node);
    void caseTStringValue(TStringValue node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
