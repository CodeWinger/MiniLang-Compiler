/* This file was generated by SableCC (http://www.sablecc.org/). */

package MiniLangCompiler.analysis;

import MiniLangCompiler.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProgramProg(AProgramProg node);
    void caseAWhileStmt(AWhileStmt node);
    void caseAIfelseStmt(AIfelseStmt node);
    void caseAIfStmt(AIfStmt node);
    void caseAPrintStmt(APrintStmt node);
    void caseAReadStmt(AReadStmt node);
    void caseAAssignStmt(AAssignStmt node);
    void caseAFloatDecl(AFloatDecl node);
    void caseAIntDecl(AIntDecl node);
    void caseAStringDecl(AStringDecl node);
    void caseAPlusExp(APlusExp node);
    void caseAMinusExp(AMinusExp node);
    void caseAMultExp(AMultExp node);
    void caseADivdExp(ADivdExp node);
    void caseAUnaryExp(AUnaryExp node);
    void caseAParenExp(AParenExp node);
    void caseAIdExp(AIdExp node);
    void caseAIntExp(AIntExp node);
    void caseAFloatExp(AFloatExp node);
    void caseAStringExp(AStringExp node);

    void caseTEol(TEol node);
    void caseTBlank(TBlank node);
    void caseTEqual(TEqual node);
    void caseTIf(TIf node);
    void caseTThen(TThen node);
    void caseTElse(TElse node);
    void caseTEndif(TEndif node);
    void caseTWhile(TWhile node);
    void caseTDo(TDo node);
    void caseTDone(TDone node);
    void caseTPrint(TPrint node);
    void caseTRead(TRead node);
    void caseTVar(TVar node);
    void caseTInt(TInt node);
    void caseTFloat(TFloat node);
    void caseTString(TString node);
    void caseTSemicolon(TSemicolon node);
    void caseTColon(TColon node);
    void caseTComment(TComment node);
    void caseTStar(TStar node);
    void caseTSlash(TSlash node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTIntNumber(TIntNumber node);
    void caseTFloatNumber(TFloatNumber node);
    void caseTId(TId node);
    void caseTStringValue(TStringValue node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
